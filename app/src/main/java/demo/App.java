/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo;

import java.util.Map.Entry;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import org.joda.time.LocalTime;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.*;
import java.util.*;


public class App {
	private static String jsonResult ="";
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
    	
    	
        System.out.println(new App().getGreeting());
        
        LocalTime currentTime = new LocalTime();
        System.out.println("The current local time is: " + currentTime);
        
   
        
        
        
        
  	  try {

  		URL url = new URL("https://api.crypto.com/v2/public/get-ticker?instrument_name=BTC_USDT");
  		HttpURLConnection conn = (HttpURLConnection) url.openConnection();
  		conn.setRequestMethod("GET");
  		conn.setRequestProperty("Accept", "application/json");

  		if (conn.getResponseCode() != 200) {
  			throw new RuntimeException("Failed : HTTP error code : "
  					+ conn.getResponseCode());
  		}

  		BufferedReader br = new BufferedReader(new InputStreamReader(
  			(conn.getInputStream())));

  		String output;
  		System.out.println("Output from Server .... \n");
  		while ((output = br.readLine()) != null) {
  			
  			jsonResult = jsonResult +output;
  			// System.out.println(output);
  		}


  		System.out.println("\n");
  		
  		conn.disconnect();

  		
  		
  		//
  		


		System.out.println(jsonResult+"\n");
		
		
		
  		Gson gson = new Gson();
		
		//get json object from the json string
		JsonObject coderollsJsonObject = gson.fromJson(jsonResult, JsonObject.class);
  		
		String name = coderollsJsonObject.get("method").getAsString();
		System.out.println("result: "+name+"\n");
		
		

		JsonObject result = coderollsJsonObject.getAsJsonObject("result");
		String instrument_name = result.get("instrument_name").getAsString(); 
		
		System.out.println(">Instrument_name: "+instrument_name+"\n");
		
		
		//
		JsonObject data = result.getAsJsonObject("data");
		
		System.out.println(data.size());
		
		  // Map<String, Object> attributes = new HashMap<String, Object>();
		   Set<Entry<String, JsonElement>> entrySet = data.entrySet();
		   
		   for(Map.Entry<String,JsonElement> entry : entrySet){
		        //  attributes.put(entry.getKey(), data.get(entry.getKey()));
			  // System.out.println(entry.getKey() +"---- "+ data.get(entry.getKey()) );
			   System.out.println(entry.getKey() +"---- "+ entry.getValue() );
		   }
		/*

		{
			"code":0,
			"method":"public/get-ticker",
			"result":
				{
					"instrument_name":"BTC_USDT",
					"data":{"i":"BTC_USDT",
						"b":42100.00,
						"k":42170.00,
						"a":42170.00,
						"t":1648036727461,
						"v":361.285052,
						"h":666887.23,
						"l":10483.32,
						"c":-651.00}
				}
			
		}
		*/

		
		
		
  	  } catch (MalformedURLException e) {

  		e.printStackTrace();

  	  } catch (IOException e) {

  		e.printStackTrace();

  	  }
    }
    
    
    
    
}
